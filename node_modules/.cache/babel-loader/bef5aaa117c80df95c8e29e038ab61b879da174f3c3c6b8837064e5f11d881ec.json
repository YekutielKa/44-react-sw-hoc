{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katan\\\\WebstormProjects\\\\44-react-sw-hoc\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"../css/contact.css\";\nimport { base_url, characters, defaultHero, navNames, period_month, StarWarsContext } from \"../utils/constants\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [planets, setPlanets] = useState(['wait...']);\n  const {\n    hero: heroId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    changeHero\n  } = useContext(StarWarsContext);\n  const fillPlanets = async url => {\n    const response = await fetch(url);\n    const json = await response.json();\n    const planets = json.map(item => item.name);\n    setPlanets(planets);\n    const info = {\n      payload: planets,\n      time: Date.now()\n    };\n    sessionStorage.setItem('planets', JSON.stringify(info));\n  };\n  useEffect(() => {\n    if (!characters[heroId]) {\n      navigate(`/${navNames[3].route}/${defaultHero}`);\n      return;\n    }\n    changeHero(heroId);\n    const storedPlanets = JSON.parse(sessionStorage.getItem('planets'));\n    if (storedPlanets && Date.now() - storedPlanets.time < period_month) {\n      setPlanets(storedPlanets.payload);\n    } else {\n      fillPlanets(`${base_url}/v1/planets`);\n    }\n  }, [heroId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          placeholder: \"Your name..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Planet\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planet\",\n          children: planets.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"subject\",\n          placeholder: \"Write something..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Contact, \"wtmSOn9ye1U290jJuTkI6H+sNUw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useContext","useEffect","useState","base_url","characters","defaultHero","navNames","period_month","StarWarsContext","useNavigate","useParams","jsxDEV","_jsxDEV","Contact","_s","planets","setPlanets","hero","heroId","navigate","changeHero","fillPlanets","url","response","fetch","json","map","item","name","info","payload","time","Date","now","sessionStorage","setItem","JSON","stringify","route","storedPlanets","parse","getItem","children","onSubmit","e","preventDefault","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","value","_c","$RefreshReg$"],"sources":["C:/Users/katan/WebstormProjects/44-react-sw-hoc/src/components/Contact.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport \"../css/contact.css\";\r\nimport {base_url, characters, defaultHero, navNames, period_month, StarWarsContext} from \"../utils/constants\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\n\r\nconst Contact =()=>{\r\n    const [planets,setPlanets] = useState(['wait...']);\r\n    const {hero: heroId} = useParams();\r\n    const navigate = useNavigate();\r\n    const {changeHero} = useContext(StarWarsContext);\r\n\r\n    const fillPlanets = async (url) => {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n        const planets = json.map(item => item.name);\r\n        setPlanets(planets);\r\n        const info = {\r\n            payload: planets,\r\n            time: Date.now()\r\n        }\r\n        sessionStorage.setItem('planets',JSON.stringify(info));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (!characters[heroId]) {\r\n            navigate(`/${navNames[3].route}/${defaultHero}`)\r\n            return;\r\n        }\r\n        changeHero(heroId);\r\n        const storedPlanets = JSON.parse(sessionStorage.getItem('planets'));\r\n        if(storedPlanets && (Date.now()-storedPlanets.time) < period_month){\r\n            setPlanets(storedPlanets.payload);\r\n        }\r\n        else {\r\n            fillPlanets(`${base_url}/v1/planets`);\r\n        }\r\n    }, [heroId])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n            }}>\r\n                <label>First Name\r\n                    <input type=\"text\" name=\"firstname\" placeholder=\"Your name..\"/>\r\n                </label>\r\n                <label>Planet\r\n                    <select name=\"planet\">{\r\n                        planets.map((item, index) => <option value={item} key={index}>{item}</option>)\r\n                    }\r\n                    </select>\r\n                </label>\r\n                <label>Subject\r\n                    <textarea name=\"subject\" placeholder=\"Write something..\"/>\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}